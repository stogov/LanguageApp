swagger: "2.0"
info:
  version: 1.0.0
  title: "LanguageApp"
  description: описание спецификации для langapp
  termsOfService: http://swagger.io/terms/
  contact:
    name: Oleg Toplionkin
    email: toplionkin@siberian.pro
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: langapp.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth:
    post:
      description: Авторизуется на сервере
      parameters:
        - name: LoginCredentials
          in: body
          description: данные авторизации
          required: true
          schema:
            $ref: '#/definitions/LoginCredentials'
      responses:
        200:
          description: данные пользователя. если указанный uid не существует, то он создается.
          schema:
            $ref: '#/definitions/ServerResponceUser'
            
  /test/{uid}:
    get:
      description: Получает задание для тестирования
      parameters:
        - name:  uid
          type: string
          in: path
          required: true
        - name: rank
          type: integer
          in: query
          required: true
          description: id уровня который требуется в тестировании
      responses:
        200:
          description: список слов для тестирования
          schema:
            $ref: "#/definitions/ServerResponceTest"
            
  /test/{uid}/result:
    post:
      description: результат тестового задания
      parameters:
        - name:  uid
          in: path
          required: true
          type: string
          
        - name: knownWords
          description: перечисление id слов которые пользователь знает
          required: true
          type: string
          in: query
        
        - name: rank
          description: уровень пользователя который тестируется
          required: true
          type: integer
          in: query
          
      responses:
        200:
          description: возвращает данные пользователя
          schema:
            $ref: "#/definitions/ServerResponceUser"
            
  /feedback:
    post:
      description: отзыв клиента
      parameters:
        - name: name
          in: query
          type: string
          required: true
          description: имя клиента
        - name: smile
          in: query
          type: integer
          description: id смайлика
          required: true
        - name: email
          in: query
          type: string
          description: почта
          required: true
        - name: message
          in: query
          type: string
          description: сам отзыв
          required: true
      responses:
        200:
          description: все ок
          
  /tests/learnEx/{userId}:
    get:
      description: упражнение изучение слов
      parameters:
        - name:  userId
          in: path
          required: true
          type: string
          description: id пользователя
      responses:
        200:
          description: получили новый тест
          schema:
            $ref: "#/definitions/ServerResponceLearn"
        403:
          description: пользователю нельзя пройти тест сегодня
          
  /tests/learnEx/{id}/replaceWord:
    put:
      description: пользователь знает слово - нужно его заменить
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: id упражнения
        - name: wordId
          in: query
          required: true
          type: integer
          description: id слова для замены
      responses:
        200:
          description: заменяющее слово
          schema:
            $ref: "#/definitions/ServerResponceWord"
            
  /tests/learnEx/{id}/save:
    put:
      description: пользователь взял упражнение на изучение и прошел все слова
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: id упражнения
      responses:
        200:
          description: ок
        
  /user/{userId}/learnedWords:
    get:
      description: список слов которые пользователь изучил
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
          description: id пользователя
      responses:
        200:
          description: список слов который пользователь выучил
          schema:
            $ref: "#/definitions/ServerResponceWordList"
          
  /user/{userId}/activeWords:
    get:
      description: слова на изучении
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
          description: id пользователя
      responses:
        200:
          description: список слов на изучении
          schema:
            $ref: "#/definitions/ServerResponceWordList"
            
  /tests/verifyEx/{userId}:
    get:
      description: проверка слов
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
          description: id пользователя
      responses:
        200:
          description: все ок
          schema:
            $ref: "#/definitions/ServerResponceVerifyEx"
            
  /tests/verifyEx/{id}/result:
    post:
      description: ответ на проверку слов
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          description: id упражнения
          
        - name: correctWords  
          description: перечисление id слов которые пользователь ответил правильно
          required: true
          type: string
          in: query
      responses:
        200:
          description: все ок
            
definitions:
  LoginCredentials:
    type: object
    properties:
      uid: 
        type: string
    example:
      uid: 11111-2222-3333-44444444
        
  User:
    type: object
    required:
      - uid
      - rank
      - knownWords
    properties:
      uid:
        type: string
      rank:
        type: string
        enum: 
        - NOVICE
        - MEDIUM
        - HIGH
        - NATIVE
      knownWords:
        type: integer
      lastTestPassed:
        type: string
        format: date-time
    example:
      uid: 11111-2222-3333-44444444
      rank: NOVICE
      
  Word:
    type: object
    properties:
      id:
        type: integer
      word:
        type: string
        description: само слово, то что будет выводится на экран
      description:
        type: string
        description: описание слова
      translation:
        type: string
        description: перевод слова
      rank:
        type: string
        description: ранг слова
        enum:
        - NOVICE
        - MEDIUM
        - HIGH
        - NATIVE
      position:
        type: integer
        description: позиция слова в ранге
    required:
      - id
      - word
      - translation
      - rank
      - position
      
  WordVariant:
    type: object
    properties:
      word:
        $ref: "#/definitions/Word"
      variants:
        type: array
        items: 
          type: string
      
  Test:
    type: object
    properties:
      items: 
        $ref: "#/definitions/Word"
  
  LearningEx:
    type: object
    properties:
      id:
        type: integer
        description: id упражнения
      items: 
        $ref: "#/definitions/Word"
  
  ServerResponce: 
    type: object
    properties:
      class: 
        type: string
        enum:
        - User
        - Word
        - WordVariant
        - LearnEx
        - VerifyEx
      statusCode:
        type: integer
        description: числовое описание ошибки
      message:
        type: string
        description: словестное техническое описание ошибки
    required:
      - class
      
  ServerResponceUser:
    type: object
    allOf:
      - $ref: "#/definitions/ServerResponce"
    properties:
      payload:
        $ref: "#/definitions/User"
        
  ServerResponceTest:
    type: object
    allOf:
      - $ref: "#/definitions/ServerResponce"
    properties:
      payload:
        $ref: "#/definitions/Test"
        
  ServerResponceLearn:
    type: object
    allOf:
      - $ref: "#/definitions/ServerResponce"
    properties:
      payload:
        $ref: "#/definitions/LearningEx"
        
  ServerResponceWord:
    type: object
    allOf:
      - $ref: "#/definitions/ServerResponce"
    properties:
      payload:
        $ref: "#/definitions/Word"
        
        
  ServerResponceWordList:
    type: object
    allOf:
      - $ref: "#/definitions/ServerResponce"
    properties:
      items: 
        type: array
        items:
          $ref: "#/definitions/Word"
    
  ServerResponceVerifyEx:
    type: object
    allOf:
      - $ref: "#/definitions/ServerResponce"
    properties:
      items: 
        type: array
        items:
          $ref: "#/definitions/WordVariant"